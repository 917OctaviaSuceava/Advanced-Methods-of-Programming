 PROGRAM STATE: 
 > execution stack = [(Ref(int) v;(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print((rH(rH(a))+5)))))))]
 > symbol table = {}
 > file table = {}
 > heap = {}
 > output = []

 PROGRAM STATE: 
 > execution stack = [(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print((rH(rH(a))+5)))))), Ref(int) v]
 > symbol table = {}
 > file table = {}
 > heap = {}
 > output = []

 PROGRAM STATE: 
 > execution stack = [(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print((rH(rH(a))+5))))))]
 > symbol table = {v=(0, int)}
 > file table = {}
 > heap = {}
 > output = []

 PROGRAM STATE: 
 > execution stack = [(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print((rH(rH(a))+5))))), new(v, 20)]
 > symbol table = {v=(0, int)}
 > file table = {}
 > heap = {}
 > output = []

 PROGRAM STATE: 
 > execution stack = [(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print((rH(rH(a))+5)))))]
 > symbol table = {v=(1, int)}
 > file table = {}
 > heap = {1=20}
 > output = []

 PROGRAM STATE: 
 > execution stack = [(new(a, v);(print(rH(v));print((rH(rH(a))+5)))), Ref(Ref(int)) a]
 > symbol table = {v=(1, int)}
 > file table = {}
 > heap = {1=20}
 > output = []

 PROGRAM STATE: 
 > execution stack = [(new(a, v);(print(rH(v));print((rH(rH(a))+5))))]
 > symbol table = {a=(0, Ref(int)), v=(1, int)}
 > file table = {}
 > heap = {1=20}
 > output = []

 PROGRAM STATE: 
 > execution stack = [(print(rH(v));print((rH(rH(a))+5))), new(a, v)]
 > symbol table = {a=(0, Ref(int)), v=(1, int)}
 > file table = {}
 > heap = {1=20}
 > output = []

 PROGRAM STATE: 
 > execution stack = [(print(rH(v));print((rH(rH(a))+5)))]
 > symbol table = {a=(2, Ref(int)), v=(1, int)}
 > file table = {}
 > heap = {1=20, 2=(1, int)}
 > output = []

 PROGRAM STATE: 
 > execution stack = [print((rH(rH(a))+5)), print(rH(v))]
 > symbol table = {a=(2, Ref(int)), v=(1, int)}
 > file table = {}
 > heap = {1=20, 2=(1, int)}
 > output = []

 PROGRAM STATE: 
 > execution stack = [print((rH(rH(a))+5))]
 > symbol table = {a=(2, Ref(int)), v=(1, int)}
 > file table = {}
 > heap = {1=20, 2=(1, int)}
 > output = [20]

 PROGRAM STATE: 
 > execution stack = []
 > symbol table = {a=(2, Ref(int)), v=(1, int)}
 > file table = {}
 > heap = {1=20, 2=(1, int)}
 > output = [20, 25]

 PROGRAM STATE: 
 > execution stack = [(Ref(int) v;(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print((rH(rH(a))+5)))))))]
 > symbol table = {}
 > file table = {}
 > heap = {}
 > output = []

 PROGRAM STATE: 
 > execution stack = [(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print((rH(rH(a))+5)))))), Ref(int) v]
 > symbol table = {}
 > file table = {}
 > heap = {}
 > output = []

 PROGRAM STATE: 
 > execution stack = [(Ref(int) v;(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print((rH(rH(a))+5)))))))]
 > symbol table = {}
 > file table = {}
 > heap = {}
 > output = []

 PROGRAM STATE: 
 > execution stack = [(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print((rH(rH(a))+5)))))), Ref(int) v]
 > symbol table = {}
 > file table = {}
 > heap = {}
 > output = []

 PROGRAM STATE: 
 > execution stack = [(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print((rH(rH(a))+5))))))]
 > symbol table = {v=(0, int)}
 > file table = {}
 > heap = {}
 > output = []

 PROGRAM STATE: 
 > execution stack = [(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print((rH(rH(a))+5))))), new(v, 20)]
 > symbol table = {v=(0, int)}
 > file table = {}
 > heap = {}
 > output = []

 PROGRAM STATE: 
 > execution stack = [(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print((rH(rH(a))+5)))))]
 > symbol table = {v=(1, int)}
 > file table = {}
 > heap = {1=20}
 > output = []

 PROGRAM STATE: 
 > execution stack = [(new(a, v);(print(rH(v));print((rH(rH(a))+5)))), Ref(Ref(int)) a]
 > symbol table = {v=(1, int)}
 > file table = {}
 > heap = {1=20}
 > output = []

 PROGRAM STATE: 
 > execution stack = [(new(a, v);(print(rH(v));print((rH(rH(a))+5))))]
 > symbol table = {a=(0, Ref(int)), v=(1, int)}
 > file table = {}
 > heap = {1=20}
 > output = []

 PROGRAM STATE: 
 > execution stack = [(print(rH(v));print((rH(rH(a))+5))), new(a, v)]
 > symbol table = {a=(0, Ref(int)), v=(1, int)}
 > file table = {}
 > heap = {1=20}
 > output = []

 PROGRAM STATE: 
 > execution stack = [(print(rH(v));print((rH(rH(a))+5)))]
 > symbol table = {a=(2, Ref(int)), v=(1, int)}
 > file table = {}
 > heap = {1=20, 2=(1, int)}
 > output = []

 PROGRAM STATE: 
 > execution stack = [print((rH(rH(a))+5)), print(rH(v))]
 > symbol table = {a=(2, Ref(int)), v=(1, int)}
 > file table = {}
 > heap = {1=20, 2=(1, int)}
 > output = []

 PROGRAM STATE: 
 > execution stack = [print((rH(rH(a))+5))]
 > symbol table = {a=(2, Ref(int)), v=(1, int)}
 > file table = {}
 > heap = {1=20, 2=(1, int)}
 > output = [20]

 PROGRAM STATE: 
 > execution stack = []
 > symbol table = {a=(2, Ref(int)), v=(1, int)}
 > file table = {}
 > heap = {1=20, 2=(1, int)}
 > output = [20, 25]

